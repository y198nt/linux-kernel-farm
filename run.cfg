{
	"target": "linux/amd64",
	"http": "127.0.0.1:56741",
	"workdir": "/home/cpu12462/p2o_2025/workdir",
	"kernel_obj": "/home/cpu12462/p2o_2025/linux",
	"image": "/home/cpu12462/p2o_2025/image/bullseye.img",
	"sshkey": "/home/cpu12462/p2o_2025/image/bullseye.id_rsa",
	"syzkaller": "/home/cpu12462/syzkaller_/",
	"procs": 4,
	"type": "qemu",
	"vm": {
		"count": 4,
		"kernel": "/home/cpu12462/p2o_2025/linux/arch/x86/boot/bzImage",
		"cpu": 2,
		"mem": 2048
	},
    "enable_syscalls": [
      
        "syz_init_net_socket$bt_hci",
        "getsockname$bt_hci",
        "bind$bt_hci",
        "ioctl$sock_bt_hci",
        "ioctl$HCIINQUIRY",
        "ioctl$bt_hci_sock_compat",
        "setsockopt$bt_hci_old",
        "setsockopt$bt_hci",
        "getsockopt$bt_hci",
        "getsockopt$bt_hci_old",
        "write$bt_hci",
        "sendmsg$bt_hci",
        "recvmsg$bt_hci",
        "close$bt_hci",
        "poll$bt_hci",

        "syz_init_net_socket$bt_sco",
        "bind$bt_sco",
        "connect$bt_sco",
        "listen$bt_sco",
        "accept$bt_sco",
        "getsockname$bt_sco",
        "sendmsg$bt_sco",
        "recvmsg$bt_sco",
        "getsockopt$bt_sco_new",
        "getsockopt$bt_sco_old",
        "shutdown$bt_sco",
        "setsockopt$bt_sco_new",
        "poll$bt_sco",
        "ioctl$bt_sock_sco",
        "ioctl$bt_sco_gettstamp",
        "close$bt_sco",

        "syz_init_net_socket$bt_l2cap",
        "shutdown$bt_l2cap",
        "close$bt_l2cap",
        "bind$bt_l2cap",
        "connect$bt_l2cap",
        "listen$bt_l2cap",
        "accept$bt_l2cap",
        "getsockname$bt_l2cap",
        "sendmsg$bt_l2cap",
        "recvmsg$bt_l2cap",
        "poll$bt_l2cap",
        "ioctl$bt_l2cap",
        "ioctl$bt_l2cap_gettstamp",
        "setsockopt$bt_l2cap_L2CAP_new",
        "setsockopt$bt_l2cap_L2CAP_old",
        "getsockopt$bt_l2cap_L2CAP_new",
        "getsockopt$bt_l2cap_L2CAP_old",

        "openat$l2cap_enable",
        "openat$l2cap_control",
        "read$l2cap_enable",
        "read$l2cap_control",
        "lseek$l2cap_enable",
        "lseek$l2cap_control",
        "close$l2cap_enable",
        "close$l2cap_control",
        "write$l2cap_enable",
        "write$l2cap_control",

        "syz_init_net_socket$bt_rfcomm",
        "bind$bt_rfcomm",
        "connect$bt_rfcomm",
        "listen$bt_rfcomm",
        "accept$bt_rfcomm",
        "getsockname$bt_rfcomm",
        "shutdown$bt_rfcomm",
        "setsockopt$bt_rfcomm_new",
        "setsockopt$bt_rfcomm_old",
        "getsockopt$bt_rfcomm_new",
        "getsockopt$bt_rfcomm_old",
        "close$bt_rfcomm",
        "ioctl$bt_rfcomm",
        "ioctl$bt_rfcomm_dev",
        "ioctl$bt_rfcomm_gettstamp",
        "poll$bt_rfcomm",
        "sendmsg$bt_rfcomm",
        "recvmsg$bt_rfcomm",

        "syz_init_net_socket$bt_hidp",
        "ioctl$sock_bt_hidp",
        "close$bt_hidp",

        # "syz_init_net_socket$bt_cmtp",
        # "ioctl$sock_bt_cmtp_CMTPCONNADD",
        # "close$bt_cmtp",

        "syz_init_net_socket$bt_bnep",
        "ioctl$sock_bt_bnep_BNEPCONNADD",
        "close$bt_bnep", 


        "ioctl$enable_quality_report",
        "ioctl$disable_quality_report",

        "syz_init_net_socket$bt_aosp",
        "ioctl$sock_bt_aosp",     

        "openat$6lowpan_enable",
        "openat$6lowpan_control",

        "read$6lowpan_enable",
        "read$6lowpan_control",

        "lseek$6lowpan_enable",
        "lseek$6lowpan_control",

        "close$6lowpan_enable",
        "close$6lowpan_control",

        "write$6lowpan_enable",
        "write$6lowpan_control",




        
        # ------------------------
        "accept$IORING_OP_ACCEPT",
        "fstat",
        "fstat$auto",
        "geteuid",
        "eventfd",
        "openat$fuse",
        "open$dir",
        "syz_mount_image$fuse",
        # "accept",
        "epoll_create",
        "openat$nci",
        "ioctl$IOCTL_GET_NCIDEV_IDX",
        "clock_gettime",
        "close$io_uring",
        "syz_io_uring_setup",
        "io_uring_setup",
        "io_uring_enter",
        "io_uring_register$IORING_REGISTER_BUFFERS",
        "io_uring_register$IORING_UNREGISTER_BUFFERS",
        "io_uring_register$IORING_REGISTER_FILES",
        "io_uring_register$IORING_UNREGISTER_FILES",
        "io_uring_register$IORING_REGISTER_EVENTFD",
        "io_uring_register$IORING_UNREGISTER_EVENTFD",
        "io_uring_register$IORING_REGISTER_FILES_UPDATE",
        "io_uring_register$IORING_REGISTER_EVENTFD_ASYNC",
        "io_uring_register$IORING_REGISTER_PROBE",
        "io_uring_register$IORING_REGISTER_PERSONALITY",
        "io_uring_register$IORING_UNREGISTER_PERSONALITY",
        "io_uring_register$IORING_REGISTER_ENABLE_RINGS",
        "io_uring_register$IORING_REGISTER_RESTRICTIONS",
        "io_uring_register$IORING_REGISTER_BUFFERS2",
        "io_uring_register$IORING_REGISTER_BUFFERS_UPDATE",
        "io_uring_register$IORING_REGISTER_FILES2",
        "io_uring_register$IORING_REGISTER_FILES_UPDATE2",
        "io_uring_register$IORING_REGISTER_IOWQ_AFF",
        "io_uring_register$IORING_UNREGISTER_IOWQ_AFF",
        "io_uring_register$IORING_REGISTER_IOWQ_MAX_WORKERS",
        "io_uring_register$IORING_REGISTER_RING_FDS",
        "io_uring_register$IORING_UNREGISTER_RING_FDS",
        "io_uring_register$IORING_REGISTER_PBUF_RING",
        "io_uring_register$IORING_UNREGISTER_PBUF_RING",
        "io_uring_register$IORING_REGISTER_SYNC_CANCEL",
        "io_uring_register$IORING_REGISTER_FILE_ALLOC_RANGE",
        "io_uring_register$IORING_REGISTER_PBUF_STATUS",
        "io_uring_register$IORING_REGISTER_NAPI",
        "io_uring_register$IORING_UNREGISTER_NAPI",
        "io_uring_register$IORING_REGISTER_ZCRX_IFQ",
        "io_uring_register$IORING_REGISTER_CLOCK",
        "io_uring_register$IORING_REGISTER_CLONE_BUFFERS",
        "io_uring_register$IORING_REGISTER_RESIZE_RINGS",
        "io_uring_register$IORING_REGISTER_MEM_REGION",
        "mmap$IORING_OFF_SQ_RING",
        "mmap$IORING_OFF_CQ_RING",
        "mmap$IORING_OFF_SQES",
        "mmap$IORING_OFF_PBUF_RING",
        "mmap$IORING_MAP_OFF_PARAM_REGION",
        "munmap$io_uring",
        "syz_memcpy_off$IO_URING_METADATA_GENERIC",
        "syz_memcpy_off$IO_URING_METADATA_FLAGS",
        "syz_io_uring_complete",
        "syz_io_uring_submit",
        "io_cancel$IO_URING_GENERIC",
        # "io_uring_sqe$nop",
        # ------------------------------- TIPC
        "socket$tipc",
        "socketpair$tipc",
        "bind$tipc",
        "connect$tipc",
        "accept4$tipc",
        "getsockname$tipc",
        "getpeername$tipc",
        "sendmsg$tipc",
        "poll$tipc",
        "shutdown$tipc",
        "recvmsg$tipc",
        "setsockopt$tipc",
        "getsockopt$tipc",
        "setsockopt$TIPC_GROUP_JOIN",
        "ioctl$SIOCGETLINKNAME",
        "ioctl$SIOCGETNODEID",
        # -------------------------------- tipc-netlink
        "syz_genetlink_get_family_id$tipc",
        "sendmsg$TIPC_CMD_SET_LINK_TOL",
        "sendmsg$TIPC_CMD_SET_LINK_PRI",
        "sendmsg$TIPC_CMD_SET_LINK_WINDOW",
        "sendmsg$TIPC_CMD_ENABLE_BEARER",
        "sendmsg$TIPC_CMD_GET_BEARER_NAMES",
        "sendmsg$TIPC_CMD_GET_MEDIA_NAMES",
        "sendmsg$TIPC_CMD_SHOW_PORTS",
        "sendmsg$TIPC_CMD_GET_REMOTE_MNG",
        "sendmsg$TIPC_CMD_GET_MAX_PORTS",
        "sendmsg$TIPC_CMD_GET_NETID",
        "sendmsg$TIPC_CMD_GET_NODES",
        "sendmsg$TIPC_CMD_GET_LINKS",
        "sendmsg$TIPC_CMD_SET_NODE_ADDR",
        "sendmsg$TIPC_CMD_SHOW_NAME_TABLE",
        "sendmsg$TIPC_CMD_SHOW_LINK_STATS",
        "sendmsg$TIPC_CMD_SHOW_STATS",
        "sendmsg$TIPC_CMD_DISABLE_BEARER",
        "sendmsg$TIPC_CMD_RESET_LINK_STATS",
        "sendmsg$TIPC_CMD_SET_NETID",
        "sendmsg$TIPC_CMD_NOOP",
        # ---------------------------- TIPC V2
        "socket$nl_generic",
        "syz_genetlink_get_family_id$tipc2",
        "sendmsg$TIPC_NL_BEARER_DISABLE",
        "sendmsg$TIPC_NL_BEARER_ENABLE",
        "sendmsg$TIPC_NL_BEARER_GET",
        "sendmsg$TIPC_NL_BEARER_ADD",
        "sendmsg$TIPC_NL_BEARER_SET",
        "sendmsg$TIPC_NL_SOCK_GET",
        "sendmsg$TIPC_NL_PUBL_GET",
        "sendmsg$TIPC_NL_LINK_GET",
        "sendmsg$TIPC_NL_LINK_SET",
        "sendmsg$TIPC_NL_LINK_RESET_STATS",
        "sendmsg$TIPC_NL_MEDIA_GET",
        "sendmsg$TIPC_NL_MEDIA_SET",
        "sendmsg$TIPC_NL_NODE_GET",
        "sendmsg$TIPC_NL_NET_GET",
        "sendmsg$TIPC_NL_NET_SET",
        "sendmsg$TIPC_NL_NAME_TABLE_GET",
        "sendmsg$TIPC_NL_MON_SET", 
        "sendmsg$TIPC_NL_MON_GET",
        "sendmsg$TIPC_NL_MON_PEER_GET",
        "sendmsg$TIPC_NL_PEER_REMOVE",
        "sendmsg$TIPC_NL_UDP_GET_REMOTEIP",
        "sendmsg$TIPC_NL_KEY_SET",
        "sendmsg$TIPC_NL_KEY_FLUSH",
        "sendmsg$TIPC_NL_ADDR_LEGACY_GET", 
        #-------------------------------
        "socket$netlink",
        "bind$netlink",
        "connect$netlink",
        "getsockname$netlink",
        "getpeername$netlink",
        "sendmsg$netlink",
        "close$netlink",
        "poll$netlink",
        "setsockopt$netlink_NETLINK_ADD_MEMBERSHIP",
        "setsockopt$netlink_NETLINK_DROP_MEMBERSHIP",
        "setsockopt$netlink_NETLINK_PKTINFO",
        "setsockopt$netlink_NETLINK_BROADCAST_ERROR",
        "setsockopt$netlink_NETLINK_NO_ENOBUFS",
        "setsockopt$netlink_NETLINK_RX_RING",
        "setsockopt$netlink_NETLINK_TX_RING",
        "setsockopt$netlink_NETLINK_LISTEN_ALL_NSID",
        "setsockopt$netlink_NETLINK_CAP_ACK",
        "setsockopt$netlink_NETLINK_EXT_ACK",
        "setsockopt$netlink_NETLINK_GET_STRICT_CHK",
        "getsockopt$netlink",

        # --------------------------- netlink-netfilter


        "socket$nl_netfilter",
        "sendmsg$nl_netfilter",
        "recvmsg$nl_netfilter",
        "listen$nl_netfilter",
        "close$nl_netfilter",

        "sendmsg$NFNL_MSG_HOOK_GET",

        # ---------------socket packet---------------------------------
        "syz_init_net_socket$packet",
        "socket$packet",
        "bind$packet",
        "connect$packet",
        "accept$packet",
        "accept4$packet",
        "poll$packet",
        "sendto$packet",
        "recvfrom$packet",
        "getsockname$packet",
        "getpeername$packet",
        "ioctl$packet",
        "close$packet",
        "ioctl$packet_gettstamp",
        "mmap$packet",
        # "mmap2$packet",
        "sendmsg$packet",
        "recvmsg$packet",

        "syz_init_net_socket$packet_spkt",
        "close$packet_spkt",
        "bind$packet_spkt",
        "getsockname$packet_spkt",
        "getpeername$packet_spkt",
        "poll$packet_spkt",
        "ioctl$packet_spkt",
        "ioctl$packet_spkt_gettstamp",
        "sendmsg$packet_spkt",
        "recvmsg$packet_spkt",

        "getsockopt$packet_int",
        "setsockopt$packet_int",
        "getsockopt$packet_buf",
        "setsockopt$packet_buf",

        "setsockopt$packet_add_memb",
        "setsockopt$packet_drop_memb",

        "setsockopt$packet_rx_ring",
        "setsockopt$packet_tx_ring",

        "setsockopt$packet_fanout",
        "setsockopt$packet_fanout_data",

        "capget$auto",
        "capset$auto",
        "clone$auto", 
        # ---------------------- vsock 
        "socket$vsock_stream",
        "bind$vsock_stream",
        "connect$vsock_stream",
        "accept4$vsock_stream",
        "accept$vsock_stream",
        "getsockname$vsock_stream",
        "getpeername$vsock_stream",
        "poll$vsock_stream",
        "ioctl$vsock_stream",
        "listen$vsock_stream",
        "shutdown$vsock_stream",
        "setsockopt$SO_VM_SOCKETS_BUFFER_SIZE",
        "setsockopt$SO_VM_SOCKETS_BUFFER_MAX_SIZE",
        "setsockopt$SO_VM_SOCKETS_BUFFER_MIN_SIZE",
        "setsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_NEW",
        "setsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_OLD",
        "close$vsock_stream",
        "getsockopt$SO_VM_SOCKETS_BUFFER_SIZE",
        "getsockopt$SO_VM_SOCKETS_BUFFER_MAX_SIZE",
        "getsockopt$SO_VM_SOCKETS_BUFFER_MIN_SIZE",
        "getsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_NEW",
        "getsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_OLD",
        "sendmsg$vsock_stream",
        "recvmsg$vsock_stream",
        "setsockopt$vsock_rcvlowat",
        "syz_vsock_read_skb$vsock_stream",

        "socket$vsock_dgram",
        "bind$vsock_dgram",
        "connect$vsock_dgram",
        "close$vsock_dgram",
        "getsockname$vsock_dgram",
        "getpeername$vsock_dgram",
        "poll$vsock_dgram",
        "ioctl$vsock_dgram",
        "shutdown$vsock_dgram",
        "sendmsg$vsock_dgram",
        "recvmsg$vsock_dgram",
        "syz_vsock_read_skb$sock_vsock_dgram",

        "socket$sock_vsock_seqpacket",
        "close$sock_vsock_seqpacket",
        "bind$sock_vsock_seqpacket",
        "connect$sock_vsock_seqpacket",
        "accept$sock_vsock_seqpacket",
        "accept4$sock_vsock_seqpacket",
        "getsockname$sock_vsock_seqpacket",
        "getpeername$sock_vsock_seqpacket",
        "poll$sock_vsock_seqpacket",
        "ioctl$sock_vsock_seqpacket",
        "listen$sock_vsock_seqpacket",
        "shutdown$sock_vsock_seqpacket",
        "setsockopt$SO_VM_SOCKETS_BUFFER_SIZE",
        "setsockopt$SO_VM_SOCKETS_BUFFER_MAX_SIZE",
        "setsockopt$SO_VM_SOCKETS_BUFFER_MIN_SIZE",
        "setsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_NEW",
        "setsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_OLD",
        "getsockopt$SO_VM_SOCKETS_BUFFER_SIZE",
        "getsockopt$SO_VM_SOCKETS_BUFFER_MAX_SIZE",
        "getsockopt$SO_VM_SOCKETS_BUFFER_MIN_SIZE",
        "getsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_NEW",
        "getsockopt$SO_VM_SOCKETS_CONNECT_TIMEOUT_OLD",
        "sendmsg$sock_vsock_seqpacket",
        "recvmsg$sock_vsock_seqpacket",
        "syz_vsock_read_skb$sock_vsock_seqpacket",

        "openat$vsock",
        "close$vsock",
        "read$vsock",
        "write$vsock",
        "readv$vsock",
        "writev$vsock",

        "openat$vhost_vsock",
        "ioctl$VHOST_VSOCK_SET_GUEST_CID",
        "ioctl$VHOST_VSOCK_SET_RUNNING",
        "ioctl$vhost_vsock_VHOST_GET_FEATURES",
        "ioctl$vhost_vsock_VHOST_SET_FEATURES",
        "ioctl$vhost_vsock_VHOST_GET_BACKEND_FEATURES",
        "ioctl$vhost_vsock_VHOST_SET_BACKEND_FEATURES",
        "close$vhost_vsock",
        "read$vhost_vsock",
        "write$vhost_vsock",
        "readv$vhost_vsock",
        "writev$vhost_vsock",
        "poll$vhost_vsock",

        "openat$vnet",
        "write$vhost_msg",
        "write$vhost_msg_v2",
        "ioctl$VHOST_NET_SET_BACKEND",

        "ioctl$VHOST_GET_FEATURES",
        "ioctl$VHOST_SET_FEATURES",
        "ioctl$VHOST_SET_BACKEND_FEATURES",
        "ioctl$VHOST_GET_BACKEND_FEATURES",

        "ioctl$VHOST_SET_OWNER",
        "ioctl$VHOST_RESET_OWNER",
        "ioctl$VHOST_SET_MEM_TABLE",
        "ioctl$VHOST_SET_LOG_BASE",
        "ioctl$VHOST_SET_LOG_FD",
        "ioctl$VHOST_SET_VRING_NUM",
        "ioctl$VHOST_SET_VRING_BASE",
        "ioctl$VHOST_GET_VRING_BASE",
        "ioctl$VHOST_SET_VRING_ADDR",
        "ioctl$VHOST_SET_VRING_KICK",
        "ioctl$VHOST_SET_VRING_CALL",
        "ioctl$VHOST_SET_VRING_ERR",
        "ioctl$VHOST_SET_VRING_ENDIAN",
        "ioctl$VHOST_GET_VRING_ENDIAN",
        "ioctl$VHOST_SET_VRING_BUSYLOOP_TIMEOUT",
        "ioctl$VHOST_GET_VRING_BUSYLOOP_TIMEOUT",

        "ioctl$VHOST_VDPA_GET_DEVICE_ID",
        "ioctl$VHOST_VDPA_GET_STATUS",
        "ioctl$VHOST_VDPA_SET_STATUS",
        "ioctl$VHOST_VDPA_GET_CONFIG",
        "ioctl$VHOST_VDPA_SET_CONFIG",
        "ioctl$VHOST_VDPA_SET_VRING_ENABLE",
        "ioctl$VHOST_VDPA_GET_VRING_NUM",
        "ioctl$VHOST_VDPA_SET_CONFIG_CALL",
        "ioctl$VHOST_VDPA_GET_IOVA_RANGE",
        "ioctl$VHOST_VDPA_GET_CONFIG_SIZE",
        "ioctl$VHOST_VDPA_SUSPEND",
        "ioctl$VHOST_VDPA_RESUME",
        "ioctl$VHOST_VDPA_GET_VQS_COUNT",
        "ioctl$VHOST_VDPA_GET_GROUP_NUM",
        "ioctl$VHOST_VDPA_GET_AS_NUM",
        "ioctl$VHOST_VDPA_GET_VRING_GROUP",
        "ioctl$VHOST_VDPA_SET_GROUP_ASID",
        "ioctl$VHOST_IOTLB_UPDATE",
        "ioctl$VHOST_IOTLB_INVALIDATE",
        "ioctl$VHOST_IOTLB_BATCH_BEGIN",
        "ioctl$VHOST_IOTLB_BATCH_END",
        "ioctl$VHOST_SCSI_SET_ENDPOINT",
        "ioctl$VHOST_SCSI_CLEAR_ENDPOINT",
        "ioctl$VHOST_SCSI_GET_ABI_VERSION",
        "ioctl$VHOST_SCSI_SET_EVENTS_MISSED",
        "ioctl$VHOST_SCSI_GET_EVENTS_MISSED"




      ],
    "reproduce": true
    # "sandbox": "setuid"
}
