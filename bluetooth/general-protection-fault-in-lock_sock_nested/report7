Oops: general protection fault, probably for non-canonical address 0xdffffc000000004b: 0000 [#1] PREEMPT SMP KASAN NOPTI
KASAN: null-ptr-deref in range [0x0000000000000258-0x000000000000025f]
CPU: 1 UID: 0 PID: 12363 Comm: kworker/1:8 Not tainted 6.14.0-rc1 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Workqueue: events l2cap_info_timeout
RIP: 0010:__lock_acquire+0xe2/0x3c80 kernel/locking/lockdep.c:5091
Code: d0 7c 08 84 d2 0f 85 d2 13 00 00 8b 05 5b 0b ab 0e 85 c0 0f 84 35 0e 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 0f 85 8c 2c 00 00 49 8b 04 24 48 3d a0 c7 56 93 0f 84
RSP: 0018:ffffc90006b6f880 EFLAGS: 00010006
RAX: dffffc0000000000 RBX: 1ffff92000d6df22 RCX: 0000000000000000
RDX: 000000000000004b RSI: 0000000000000000 RDI: 0000000000000258
RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
R10: ffffffff903fca17 R11: 0000000000000000 R12: 0000000000000258
R13: 0000000000000000 R14: 0000000000000000 R15: ffff888044688000
FS:  0000000000000000(0000) GS:ffff88807ee00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f66f41bf658 CR3: 0000000013068000 CR4: 0000000000352ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 lock_acquire.part.0+0x11b/0x370 kernel/locking/lockdep.c:5851
 lock_sock_nested+0x3a/0xf0 net/core/sock.c:3645
 lock_sock include/net/sock.h:1624 [inline]
 l2cap_sock_ready_cb+0x42/0x170 net/bluetooth/l2cap_sock.c:1662
 l2cap_chan_ready net/bluetooth/l2cap_core.c:1239 [inline]
 l2cap_conn_start+0x176/0xa40 net/bluetooth/l2cap_core.c:1506
 process_one_work+0x957/0x1b60 kernel/workqueue.c:3236
 process_scheduled_works kernel/workqueue.c:3317 [inline]
 worker_thread+0x677/0xe90 kernel/workqueue.c:3398
 kthread+0x3b0/0x760 kernel/kthread.c:464
 ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:148
 ret_from_fork_asm+0x1a/0x30
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
RIP: 0010:__lock_acquire+0xe2/0x3c80 kernel/locking/lockdep.c:5091
Code: d0 7c 08 84 d2 0f 85 d2 13 00 00 8b 05 5b 0b ab 0e 85 c0 0f 84 35 0e 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 0f 85 8c 2c 00 00 49 8b 04 24 48 3d a0 c7 56 93 0f 84
RSP: 0018:ffffc90006b6f880 EFLAGS: 00010006
RAX: dffffc0000000000 RBX: 1ffff92000d6df22 RCX: 0000000000000000
RDX: 000000000000004b RSI: 0000000000000000 RDI: 0000000000000258
RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
R10: ffffffff903fca17 R11: 0000000000000000 R12: 0000000000000258
R13: 0000000000000000 R14: 0000000000000000 R15: ffff888044688000
FS:  0000000000000000(0000) GS:ffff88807ee00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f66f41bf658 CR3: 0000000013068000 CR4: 0000000000352ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
----------------
Code disassembly (best guess), 1 bytes skipped:
   0:	7c 08                	jl     0xa
   2:	84 d2                	test   %dl,%dl
   4:	0f 85 d2 13 00 00    	jne    0x13dc
   a:	8b 05 5b 0b ab 0e    	mov    0xeab0b5b(%rip),%eax        # 0xeab0b6b
  10:	85 c0                	test   %eax,%eax
  12:	0f 84 35 0e 00 00    	je     0xe4d
  18:	48 b8 00 00 00 00 00 	movabs $0xdffffc0000000000,%rax
  1f:	fc ff df
  22:	4c 89 e2             	mov    %r12,%rdx
  25:	48 c1 ea 03          	shr    $0x3,%rdx
* 29:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1) <-- trapping instruction
  2d:	0f 85 8c 2c 00 00    	jne    0x2cbf
  33:	49 8b 04 24          	mov    (%r12),%rax
  37:	48 3d a0 c7 56 93    	cmp    $0xffffffff9356c7a0,%rax
  3d:	0f                   	.byte 0xf
  3e:	84                   	.byte 0x84
