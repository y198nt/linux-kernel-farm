// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	covermerger "github.com/google/syzkaller/pkg/covermerger"
	mock "github.com/stretchr/testify/mock"
)

// FileCoverageMerger is an autogenerated mock type for the FileCoverageMerger type
type FileCoverageMerger struct {
	mock.Mock
}

// Add provides a mock function with given fields: record
func (_m *FileCoverageMerger) Add(record *covermerger.FileRecord) {
	_m.Called(record)
}

// Result provides a mock function with no fields
func (_m *FileCoverageMerger) Result() *covermerger.MergeResult {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Result")
	}

	var r0 *covermerger.MergeResult
	if rf, ok := ret.Get(0).(func() *covermerger.MergeResult); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*covermerger.MergeResult)
		}
	}

	return r0
}

// NewFileCoverageMerger creates a new instance of FileCoverageMerger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFileCoverageMerger(t interface {
	mock.TestingT
	Cleanup(func())
}) *FileCoverageMerger {
	mock := &FileCoverageMerger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
